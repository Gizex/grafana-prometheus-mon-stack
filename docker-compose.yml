version: '3.7'
services:
  grafana:
    image: grafana/grafana:8.2.7
    user: "472"
    container_name: grafana
    depends_on:
      - prometheus
    volumes:
      - ./grafana/data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./grafana/config.monitoring
    environment:
      GF_RENDERING_SERVER_URL: http://10.2.2.201:8081/render
      GF_RENDERING_CALLBACK_URL: http://10.2.2.20:3000/
      GF_LOG_FILTERS: rendering:debug
      GF_SERVER_ROOT_URL: http://10.2.2.20:3000/
    networks:
     default:
      ipv4_address: 10.2.2.20
    restart: always

  renderer:
  # grafana-cli plugins install grafana-image-renderer
    image: grafana/grafana-image-renderer:latest
    container_name: grafana_img_render
    networks:
     default:
    restart: always
  prometheus:
    user: "1000:1000"
    image: prom/prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
      - ./prometheus/data/:/prometheus/
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
    links:
      - cadvisor:cadvisor
    depends_on:
      - cadvisor
    networks:
     default:
      ipv4_address: 10.2.2.21
    restart: always
  jaeger:
    image: jaegertracing/all-in-one
    container_name: jaeger
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
    networks:
     default:
      ipv4_address: 10.2.2.22

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
     default:
    restart: always

  wgexporter:
     restart: always
     container_name: wgexporter
     image: mindflavor/prometheus-wireguard-exporter
     ports:
      - "10.2.2.1:9586:9586"
     volumes:
      - /opt/monitoring:/etc/wireguard:ro
     environment:
      - PROMETHEUS_WIREGUARD_EXPORTER_EXPORT_REMOTE_IP_AND_PORT_ENABLED=true
      - PROMETHEUS_WIREGUARD_EXPORTER_PREPEND_SUDO_ENABLED=true
      - PROMETHEUS_WIREGUARD_EXPORTER_VERBOSE_ENABLED=true
      - PROMETHEUS_WIREGUARD_EXPORTER_CONFIG_FILE_NAMES=/etc/wireguard/wgexporter.conf #путь к списку имен пиров 
     cap_add:
      - NET_ADMIN
      - SYS_MODULE
      - CAP_DAC_READ_SEARCH
      - CAP_NET_RAW
      - CAP_NET_ADMIN
     network_mode: "host"

  pihole-exporter:
    container_name: pihole-exporter
    restart: always
    environment:
      - PIHOLE_HOSTNAME=10.2.0.100
      - PIHOLE_PASSWORD=1488
      - PORT=9617
    network_mode: "host"
    ports:
       - '10.2.2.1:9617:9617'
    image: 'ekofr/pihole-exporter:latest'

  minecraft_exporter:
    image: joshi425/minecraft_exporter:latest
    restart: always
    environment:
      - RCON_HOST=127.0.0.1
      - RCON_PORT=25576
      - RCON_PASSWORD=dhBZCGMBWJCvwX55UdVK
      - FORGE_SERVER=True
      - PAPER_SERVER=False
      - DYNMAP_ENABLED=True
    network_mode: "host"
    ports:
      - '10.2.2.1:8111:8000'
    volumes:
      - '/opt/mc/server_boyzhard/world:/world'
      
networks:
  default:
    external: true
    name: gzx_docker
  # loki:
  #   image: grafana/loki:latest
  #   container_name: loki
  #   volumes:
  #     - ./loki:/etc/loki
  #   ports:
  #     - "3100:3100"
  #   command: -config.file=/etc/loki/loki.yaml
  #   networks:
  #    default:
  #     ipv4_address: 10.2.2.25
  # node-exporter:
  #   image: prom/node-exporter
  #   container_name: node-exporter
  #   volumes:
  #     - /proc:/host/proc:ro
  #     - /sys:/host/sys:ro
  #     - /:/rootfs:ro
  #   command: 
  #     - '--path.procfs=/host/proc' 
  #     - '--path.sysfs=/host/sys'
  #     - --collector.filesystem.ignored-mount-points
  #     - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
  #   networks:
  #    default:
  #     ipv4_address: 10.2.2.22
  #   restart: always
  #   deploy:
  #     mode: global
  # alertmanager:
  #   image: prom/alertmanager
  #   container_name: alertmanager
  #   volumes:
  #     - ./alertmanager/:/etc/alertmanager/
  #   networks:
  #    default:
  #     ipv4_address: 10.2.2.23
  #   restart: always
  #   command:
  #     - '--config.file=/etc/alertmanager/config.yml'
  #     - '--storage.path=/alertmanager'
